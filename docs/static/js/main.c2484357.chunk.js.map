{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/getGifs.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","categories","type","value","onChange","target","GifGridItem","id","title","url","className","src","alt","getGifs","category","a","encodeURI","fetch","response","json","data","gifs","map","img","images","downsized_medium","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","key","GifExpertApp","item","divRoot","document","querySelector","ReactDOM","render"],"mappings":"mNAIaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEVC,mBAAS,IAFC,mBAEvCC,EAFuC,KAE3BC,EAF2B,KAkB9C,OACI,0BAAMC,SAXW,SAACC,GAClBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,IAE3BR,GAAc,SAAAS,GAAU,OAAKP,GAAL,mBAAoBO,OAC5CN,EAAc,OAOd,4BAAKD,GACL,2BACIQ,KAAK,OACLC,MAAOT,EACPU,SApBc,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,YCLlBG,EAAc,SAAC,GAAuB,EAArBC,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,IAErC,OACI,yBAAKC,UAAU,0CACX,yBAAKC,IAAKF,EAAKG,IAAKJ,IACpB,2BAAIA,K,uBCPHK,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbN,EADa,iDACmCO,UAAUF,GAD7C,8DAEIG,MAAMR,GAFV,cAEbS,EAFa,gBAGIA,EAASC,OAHb,uBAGXC,EAHW,EAGXA,KAGFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EAEzB,MAAO,CACHhB,GAAIgB,EAAIhB,GACRC,MAAOe,EAAIf,MACXC,IAAG,UAAEc,EAAIC,cAAN,aAAE,EAAYC,iBAAiBhB,QAXvB,kBAeZY,GAfY,4CAAH,sDCGPK,EAAU,SAAC,GAAkB,IAAhBZ,EAAe,EAAfA,SAAe,ECEb,SAACA,GAAa,MAIZrB,mBAAS,CAC/B2B,KAAM,GACNO,SAAS,IANyB,mBAI/BC,EAJ+B,KAIxBC,EAJwB,KAsBtC,OAZAC,qBAAU,WACNjB,EAAQC,GAAUiB,MAAK,SAAAC,GAEnBH,EAAS,CACLT,KAAMY,EACNL,SAAS,SAGlB,CAACb,IAIGc,EDtB2BK,CAAanB,GAAjCU,EAFuB,EAE7BJ,KAAcO,EAFe,EAEfA,QAEtB,OACI,oCACI,gCAAMb,EAAN,KACCa,GAAW,uBAAGjB,UAAU,oCAAb,cACZ,yBAAKA,UAAU,aAEPc,EAAOF,KAAI,SAAAU,GAAI,OACX,kBAAC,EAAD,CAAaE,IAAKF,EAAKzB,GAAIA,GAAIyB,EAAKzB,GAAIC,MAAOwB,EAAKxB,MAAOC,IAAKuB,EAAKvB,YEsB9E0B,EAhCa,WAAM,MAGM1C,mBAAS,CAAC,cAHhB,mBAGvBQ,EAHuB,KAGXT,EAHW,KAc9B,OACI,oCACI,4CACA,6BACA,kBAAC,EAAD,CAAaA,cAAeA,IAC5B,4BAEQS,EAAWqB,KAAK,SAACc,GAAD,OACZ,kBAAC,EAAD,CAASF,IAAKE,EACdtB,SAAUsB,UCvB5BC,EAAUC,SAASC,cAAc,SACvCC,IAASC,OACP,kBAAC,EAAD,MACAJ,I","file":"static/js/main.c2484357.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nexport const AddCategory = ({ setCategories }) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = (e) => {\r\n        setInputValue(e.target.value)\r\n    };\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (inputValue.trim().length > 2) {\r\n            // Al pasar el setState por el props, el metodo contienen el estado inicial del objecto categories\r\n            setCategories(categories => [inputValue, ...categories]);\r\n            setInputValue('');\r\n        }\r\n\r\n    };\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <h2>{inputValue}</h2>\r\n            <input\r\n                type=\"text\"\r\n                value={inputValue}\r\n                onChange={handleInputChange}\r\n            />\r\n        </form>\r\n    );\r\n\r\n};\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\nexport const GifGridItem = ({ id, title, url }) => {\r\n\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <img src={url} alt={title} />\r\n            <p>{title}</p>\r\n        </div>\r\n    );\r\n\r\n\r\n    GifGridItem.propTypes = {\r\n        id: PropTypes.string.isRequired,\r\n        title: PropTypes.string.isRequired,\r\n        url: PropTypes.string.isRequired\r\n    }\r\n\r\n\r\n}\r\n","\r\n\r\nexport const getGifs = async (category) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=5&api_key=WKSl8KyQ9KtRRehLT4HRn2rBh3b0t5sm`;\r\n    const response = await fetch(url);\r\n    const { data } = await response.json();\r\n    // Extraer la informacion necesaria del json response\r\n\r\n    const gifs = data.map(img => {\r\n        // mapper- maps the required data only\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n\r\n    return gifs;\r\n}\r\n","import React from 'react'\r\nimport { GifGridItem } from './GifGridItem';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\n\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n    const { data: images, loading } = useFetchGifs(category);\r\n\r\n    return (\r\n        <>\r\n            <h3> {category} </h3>\r\n            {loading && <p className=\"animate__animated animate__flash\">Loading...</p>}\r\n            <div className=\"card-grid\">\r\n                {\r\n                    images.map(imgs => (\r\n                        <GifGridItem key={imgs.id} id={imgs.id} title={imgs.title} url={imgs.url} />\r\n\r\n                    ))\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","// Los Hooks se nombran con la palabra 'use' --useState, useEffects, useCustomHook\r\n\r\nimport { useState, useEffect } from \"react\";\r\n// Importamos el helpers que contiene la llamada al API Endpoint\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\n\r\nexport const useFetchGifs = (category) => {\r\n\r\n\r\n    // useState sirve para crear un estado y poder avisar cuando el estado ha sido modificado.\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    // Effects no pueden ser async\r\n    useEffect(() => {\r\n        getGifs(category).then(imgs => {\r\n\r\n            setState({\r\n                data: imgs,\r\n                loading: false\r\n            });\r\n        });\r\n    }, [category])\r\n\r\n\r\n\r\n    return state;\r\n}\r\n","import React, { useState } from 'react';\r\nimport './index.css';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n    // const categories = ['One Punch', 'Samurai X', 'Dragon Ball'];\r\n    const [categories, setCategories] = useState(['One Punch']);\r\n\r\n    // const handleAdd = () => {\r\n    //     // Forma 1\r\n    //     setCategories([...categories, 'Pokemon']);\r\n\r\n    //     // Forma 2\r\n    //     setCategories(cats => [...categories, 'Pokemon', 'HunterXHunter']);\r\n    // }\r\n\r\n\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <hr />\r\n            <AddCategory setCategories={setCategories} />\r\n            <ol>\r\n                {\r\n                    categories.map( (item) => (\r\n                        <GifGrid key={item}\r\n                        category={item} />\r\n\r\n                    ))\r\n                }\r\n            </ol>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default GifExpertApp;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\n\n\n\nconst divRoot = document.querySelector('#root');\nReactDOM.render(\n  <GifExpertApp />,\n  divRoot);\n"],"sourceRoot":""}